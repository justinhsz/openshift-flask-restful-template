kind: Template
apiVersion: v1
metadata:
  name: python-nginx-template
labels:
  template: python-nginx-template
  app: python-nginx-template
message: "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/django-ex/blob/master/README.md." 
parameters:
  - name: NAME 
    displayName: Name
    description: The name assigned to all of the frontend objects defined in this template.
    value: python-nginx-template
    required: true 
  # - name: NAMESPACE 
  #   displayName: Namespace
  #   description: The OpenShift Namespace where the ImageStream resides.
  #   value: openshift
  #   required: true 
  # - name: PYTHON_VERSION
  #   displayName: Version of Python Image
  #   description: Version of Python image to be used (3.6 or latest).
  #   value: 3.6
  #   required: true
  - name: DOCKER_IMAGE 
    displayName: Docker image
    description: Docker image name with registry path.
    value: python-nginx
    required: true 
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    description: Maximum amount of memory the container can use.
    value: 512Mi
    required: true
  - name: SOURCE_REPOSITORY_URL 
    displayName: Git Repository URL
    description: The URL of the repository with your application source code 
    value: https://github.com/justinhsz/openshift-flask-restful-template.git
    required: true 
  - name: SOURCE_REPOSITORY_REF 
    displayName: Git Reference 
    description: Optional branch, tag, or commit.
    value: master
    required: false 
  - name: CONTEXT_DIR 
    displayName: Context Directory 
    description: Set this to the relative path to your project if it is not in the root of your repository.
  - name: REPLICA_COUNT
    displayName: Replica Count
    description: Number of replicas to run
    value: "1"
    required: true
  - name: PIP_INDEX_URL
    displayName: Custom PyPi Index URL
    description: The custom PyPi index URL
    value: ""
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the Django service, if left blank a value will be defaulted.
    value: ""
  # - name: ACCESS_KEY
  #   displayName: Application Hostname
  #   description: The exposed hostname that will route to the Django service, if left blank a value will be defaulted.
  #   value: ""
  # - name: ACCESS_SECRET
  #   displayName: Application Hostname
  #   description: The exposed hostname that will route to the Django service, if left blank a value will be defaulted.
  #   value: ""
objects:
  - kind: Service
    apiVersion: v1
    metadata: 
      name: "${NAME}"
      annotations:
        description: Exposes and load balances the application pods
    spec: 
      ports:
        - name: web
          port: 8080
          targetPort: 8080
      selector:
        name: "${NAME}"
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${NAME}"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: Service
        name: "${NAME}"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Keeps track of changes in the application image
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Defines how to build the application
    spec:
      source:
        type: Git
        git:
          uri: "${SOURCE_REPOSITORY_URL}" 
          ref: "${SOURCE_REPOSITORY_REF}"
      strategy:
        sourceStrategy:
          from:
            kind: DockerImage
            name: "${DOCKER_IMAGE}"
          env:
            - name: PIP_INDEX_URL
              value: "${PIP_INDEX_URL}"
        type: Source
      output:
        to: 
          kind: ImageStreamTag
          name: "${NAME}:latest"
      triggers:
        - type: ImageChange
        - type: ConfigChange
        # - type: GitHub
        #   github:
        #     secret: "${GITHUB_WEBHOOK_SECRET}"
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
    spec:
      strategy: 
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: ImageStreamTag
              name: "${NAME}:latest"
        - type: ConfigChange
      replicas: "${{REPLICA_COUNT}}" 
      selector:
        name: "${NAME}"
      template:
        metadata:
          name: "${NAME}"
          labels:
            name: "${NAME}"
        spec: 
          containers:
            - name: "${NAME}"
              image: " "
              ports:
                - containerPort: 8080
              readinessProbe:
                timeoutSeconds: 3
                initialDelaySeconds: 3
                httpGet:
                  path: /
                  port: 8080
              livenessProbe:
                timeoutSeconds: 3
                initialDelaySeconds: 30
                httpGet: 
                  path: /
                  port: 8080
              # env: 
              #   - name: APP_CONFIG
              #     value: "${APP_CONFIG}"
              resources:
                limits:
                  memory: "${MEMORY_LIMIT}"